
# services:
# ###> doctrine/doctrine-bundle ###
#   database:
#     image: postgres:${POSTGRES_VERSION:-16}-alpine
#     environment:
#       POSTGRES_DB: ${POSTGRES_DB:-app}
#       # You should definitely change the password in production
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
#       POSTGRES_USER: ${POSTGRES_USER:-app}
#     healthcheck:
#       test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
#       timeout: 5s
#       retries: 5
#       start_period: 60s
#     volumes:
#       - database_data:/var/lib/postgresql/data:rw
#       # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#       # - ./docker/db/data:/var/lib/postgresql/data:rw
# ###< doctrine/doctrine-bundle ###

# volumes:
# ###> doctrine/doctrine-bundle ###
#   database_data:
# ###< doctrine/doctrine-bundle ###

services:
  php-composer:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    working_dir: /app
    command: ["php", "-S", "0.0.0.0:8000", "-t", "public"]
    ports:
      - "8000:8000"
    environment:
      SYMFONY_ENV: dev

  database:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ChangeThisPassword
      MYSQL_DATABASE: app
      MYSQL_USER: app
      MYSQL_PASSWORD: ChangeThisPassword
    ports:
      - "3306:3306"
    volumes:
      - database_data:/var/lib/mysql


  mailer:
    image: axllent/mailpit
    ports:
      - "1025:1025"
      - "8025:8025"

volumes:
  database_data:
